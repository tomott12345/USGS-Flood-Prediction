Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'rio_hondo_gage_autogluon_6'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.10.14
Operating System:   Darwin
Platform Machine:   arm64
Platform Version:   Darwin Kernel Version 23.6.0: Mon Jul 29 21:16:46 PDT 2024; root:xnu-10063.141.2~1/RELEASE_ARM64_T8112
CPU Count:          8
GPU Count:          0
Memory Avail:       5.10 GB / 16.00 GB (31.9%)
Disk Space Avail:   530.28 GB / 926.35 GB (57.2%)
===================================================
Setting presets to: high_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': RMSE,
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 8,
 'prediction_length': 6,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'series',
 'time_limit': 600,
 'verbosity': 2}

Inferred time series frequency: 'H'
Provided train_data has 31658 rows (NaN fraction=44.6%), 2 time series. Median time series length is 15829 (min=15829, max=15829). 

Provided data contains following columns:
	target: 'series'

AutoGluon will gauge predictive performance using evaluation metric: 'RMSE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-11-11 15:39:01
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. Training for up to 45.8s of the 595.5s of remaining time.
	-89.4205      = Validation score (-RMSE)
	2.09    s     = Training runtime
	0.01    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 49.4s of the 593.4s of remaining time.
	-26.7118      = Validation score (-RMSE)
	34.32   s     = Training runtime
	0.10    s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 50.8s of the 558.9s of remaining time.
	-37.0502      = Validation score (-RMSE)
	17.08   s     = Training runtime
	0.06    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. Training for up to 54.2s of the 541.8s of remaining time.
	-45.3349      = Validation score (-RMSE)
	10.19   s     = Training runtime
	0.01    s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 59.1s of the 531.6s of remaining time.
	-4060.5686    = Validation score (-RMSE)
	0.46    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 66.4s of the 531.1s of remaining time.
	-9.3880       = Validation score (-RMSE)
	23.55   s     = Training runtime
	1.11    s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 72.3s of the 506.4s of remaining time.
	-19.4689      = Validation score (-RMSE)
	27.28   s     = Training runtime
	2.52    s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. Training for up to 79.4s of the 476.6s of remaining time.
	-8.3161       = Validation score (-RMSE)
	38.94   s     = Training runtime
	3.48    s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. Training for up to 86.8s of the 434.2s of remaining time.
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]/W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. Training for up to 108.4s of the 433.5s of remaining time.
	-444.3666     = Validation score (-RMSE)
	108.05  s     = Training runtime
	0.51    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 108.3s of the 324.8s of remaining time.
	-433.5542     = Validation score (-RMSE)
	108.91  s     = Training runtime
	1.19    s     = Validation (prediction) runtime
Training timeseries model PatchTST. Training for up to 107.3s of the 214.6s of remaining time.
	-481.6443     = Validation score (-RMSE)
	106.10  s     = Training runtime
	0.01    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'AutoARIMA': 0.61, 'DirectTabular': 0.04, 'DynamicOptimizedTheta': 0.34}
	-7.2284       = Validation score (-RMSE)
	2.68    s     = Training runtime
	4.66    s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 491.17 s
Best model: WeightedEnsemble
Best model score: -7.2284
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
